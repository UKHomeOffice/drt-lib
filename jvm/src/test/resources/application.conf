env = test

pekko {
  loglevel: "WARNING"
  loglevel: ${?ENV_LOG_LEVEL}
  log-dead-letters = 0,
  warn-about-java-serializer-usage = true
  jvm-exit-on-fatal-error = true
  persistence {
    journal {
      plugin = "pekko.persistence.journal.inmem"
    }
    snapshot-store {
      plugin = "pekko.persistence.snapshot-store.local"
    }
  }
  actor {
    allow-java-serialization = off
    serializers {
      protobuf = "uk.gov.homeoffice.drt.protobuf.Serializer"
    }
    serialization-bindings {
      "uk.gov.homeoffice.drt.protobuf.messages.SlasUpdates.SetSlaConfigMessage" = protobuf
      "uk.gov.homeoffice.drt.protobuf.messages.SlasUpdates.SlaConfigsMessage" = protobuf
      "uk.gov.homeoffice.drt.protobuf.messages.config.Configs.RemoveConfigMessage" = protobuf
      "uk.gov.homeoffice.drt.protobuf.messages.FeedArrivalsMessage.LiveFeedArrivalsDiffMessage" = protobuf
      "uk.gov.homeoffice.drt.protobuf.messages.FeedArrivalsMessage.ForecastFeedArrivalsDiffMessage" = protobuf
      "uk.gov.homeoffice.drt.protobuf.messages.FeedArrivalsMessage.LiveArrivalStateSnapshotMessage" = protobuf
      "uk.gov.homeoffice.drt.protobuf.messages.FeedArrivalsMessage.ForecastArrivalStateSnapshotMessage" = protobuf
    }
  }
}

h2-db {
  url = "jdbc:h2:mem:test;DATABASE_TO_UPPER=false;MODE=postgreSQL;"
  driver = org.h2.Driver
  connectionPool = disabled
  keepAliveConnection = true
}
